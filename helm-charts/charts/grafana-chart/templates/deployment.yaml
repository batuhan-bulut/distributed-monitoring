apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-grafana
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-grafana
    spec:
      containers:
        - name: grafana
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: {{ .Values.env.adminUserKey }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.adminUserSecretName }}
                  key: username
            - name: {{ .Values.env.adminPasswordKey }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.adminUserSecretName }}
                  key: password
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
            - name: GF_SERVER_ROOT_URL
              value: "http://localhost:8080/grafana"
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboard
              mountPath: /var/lib/grafana/dashboards
            - name: grafana-dashboard-config
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: grafana-config
          configMap:
            name: {{ .Release.Name }}-grafana-config
        - name: grafana-dashboard
          configMap:
            name: {{ .Release.Name }}-grafana-dashboard
        - name: grafana-dashboard-config
          configMap:
            name: {{ .Release.Name }}-grafana-config-dashboard 